# syntax=docker/dockerfile:1.5

# We do not use AG DLC as we may need to benchmark against any specific version of AG
# This saves space when pulling a smaller sized image

# Select either the CPU or GPU Image depending on if you are running GPU experiments or not.
# While CPU experiments can be ran on the GPU Image, it will be more cumbersome due to the much larger image size.

#############################
# 1. Choose target (cpu or gpu)
#############################
ARG DEVICE=cpu

#############################
# 2. Define both stages
#############################
# --- CPU (small, no CUDA) ---
FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:2.5.1-cpu-py311-ubuntu22.04-sagemaker AS cpu

# --- GPU (large, CUDA 12.4) ---
FROM 763104351884.dkr.ecr.us-west-2.amazonaws.com/pytorch-training:2.5.1-gpu-py311-cu124-ubuntu22.04-sagemaker AS gpu

#############################
# 3. Pick the one we want
#############################
# expands to stage “cpu” or “gpu”
FROM ${DEVICE} AS base
LABEL build.device="${DEVICE}"

#############################
# 4. Install Dependencies
#############################

# Source install Autogluon mainline or any branch that the user wants to benchmark against
# User can also source install tabarena or any other libraries, if required
# Make sure to delete the copy statements if you clone the repos and install it in the Dockerfile

COPY ./tabarena/tabflow/tabflow/cli/evaluate.py .
RUN chmod +x ./evaluate.py

WORKDIR /workspace

# Ensure uv is found and allowed to install into system Python
ENV PATH="/root/.local/bin:${PATH}"
ENV UV_SYSTEM_PYTHON=1

# Comment out to instead install the latest official release via pip.
# Install uv + AutoGluon
RUN set -ex && \
    curl -LsSf https://astral.sh/uv/install.sh | sh && \
    git clone --depth 1 https://github.com/autogluon/autogluon && \
    ./autogluon/full_install.sh

# Copy local TabArena source
# Delete the below line if you clone the tabarena repo and source install it in the Dockerfile
COPY tabarena/ tabarena/

# Install TabArena, then prune once all installs are done
# Delete uv cache to save ~3.5 GB of space
RUN set -ex && \
    uv pip install -e ./tabarena/[benchmark] && \
    uv pip install -e ./tabarena/tabflow/ && \
    uv cache clean && \
    uv cache prune && \
    rm -rf ~/.cache/uv ~/.local/share/uv ~/.config/uv
# (Optionally also remove the uv binary if you truly don’t need it)
# && rm -f "$(command -v uv)"

RUN rm -rf /root/.cache/pip

# GPU images can come pre-installed with flash-attn, uncomment this to ensure it isn't installed
# RUN pip uninstall flash-attn -y

# Generate tabarena configs and give permissions
# RUN chmod +x ./tabarena/scripts/run_generate_all_configs.py
# RUN python ./tabarena/scripts/run_generate_all_configs.py

# Print total image size (approximate)
# RUN echo "Final image size:" && du -sh / 2>/dev/null | sort -hr | head -n 1
